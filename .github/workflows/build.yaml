name: Build

on:
  workflow_call:

jobs:
  build-crowdedmod:
    name: Build CrowdedMod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout CrowdedMod
        with:  
          repository: 'CrowdedMods/CrowdedMod'
          ref: '2.10.0'
          submodules: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.x

      - name: Run the Cake script
        uses: cake-build/cake-action@v1
        with:
          verbosity: Diagnostic
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: crowdedmod
          path: src/CrowdedMod/bin/Release/net6.0/CrowdedMod.dll
          if-no-files-found: error
          overwrite: false

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set env
        run: |
          echo "BUILD_SRC=build/src" >> $GITHUB_ENV
          echo "BUILD_PKG=build/modpack.zip" >> $GITHUB_ENV

      - name: Create build directory structure
        run: mkdir -p ${{ env.BUILD_SRC }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: crowdedmod
          path: ${{ env.BUILD_DIR }}

      - name: Render manifest.json
        uses: cuchi/jinja2-action@v1.3.0
        with:
          template: manifest.json.j2
          output_file: ${{ env.BUILD_SRC }}/manifest.json
          strict: true
          variables: |
            version_number=${{ github.ref_name }}
            website_url=${{ github.server_url }}/${{ github.repository }}

      - name: Print rendered manifest.json
        run: cat ${{ env.BUILD_SRC }}/manifest.json

      - name: Copy sources
        run: |
          cp icon.png ${{ env.BUILD_SRC }}
          cp README.md ${{ env.BUILD_SRC }}

      - name: Build deliverable
        run: zip -j -r ${{ env.BUILD_PKG }} ${{ env.BUILD_SRC }}/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: ${{ env.BUILD_PKG }}
          if-no-files-found: error
          overwrite: false
